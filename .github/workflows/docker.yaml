name: docker

on:
  push:
    branches: ['master']
    tags: ['v**']
  pull_request:
    branches: ['master']
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: tricks
        run: |
          echo "IMAGE_NAME=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}
          echo '${{ github.ref }}' | awk -F\, '{ split($0, v, "/"); sub(/^v/, "", v[3]); print "VERSION=" v[3] }' >>${GITHUB_ENV}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in into the registry
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      - name: Build  Docker image
        uses: docker/build-push-action@v5
        if: ${{ github.event_name != 'push' || !startsWith(github.ref, 'refs/tags/v') }}
        with:
          context: .
          file: ./docker/Dockerfile
          push: false
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      # Build and push Docker image with Buildx (don't push on PR)
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
